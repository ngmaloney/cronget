<?php

/**
 * @file
 * Utility used to retrieve remote HTML,XML,RSS or JSON data.
 */

 // Global Variable Declarations //
 define('CRONGET_NODETYPE', 'cronget');

/**
 * Implementation of hook_help().
 */
function cronget_help($section) {
  $output = '';
  switch ($section) {
    case 'admin/help#cronget':
      $output = '<p>'. t('Cronget is a simple utility for retrieving data from a remote URL and storing it in a table. It is usefull for storing HTML,XML,JSON, etc.') .'</p>';
    break;
    case 'admin/content/cronget':
      $output = '<p>'. t("Cronget is a helper utility that allows remote data to be retrieved and stored via the Drupal cron process. It's primary use would be to fetch remote data and store it as node (or block) content.") .'</p>';
    break;
    case 'admin/content/cronget/add/job':
      $output = '<p>'. t("Add a remote http URL to retrieve. Cronget will store the results as a text string.") .'</p>';
    break;
  }
  return $output;
}

/** 
 * Implementation of hook_perm()
**/
function territory_bookmark_perm() {
  return array(
    'administer cronget',
    'create cronget jobs',
    'edit own cronget jobs',
    'access cronget'
  );
}

/**
 * Implementation of hook_menu().
 */
function cronget_menu() {
  $items = array();  
  // Menu entry for adding cronget jobs
  $items['admin/content/cronget'] = array(
    'title' => t('Cronget Jobs'),
    'description' => t("Configure cronget, a remote data retrieval module."),
    'page callback' => 'cronget_admin_overview',
    'access arguments' => array('administer cronget'),
    'file' => 'cronget.admin.inc',
  );
  $items['admin/content/cronget/list'] = array(
    'title' => t("List"),
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'description' => t("Create a listing of cronget jobs."),
    'weight' => -10,
  );
  $items['admin/content/cronget/add'] = array(
    'title' => t("Add job"),
    'description' => t("Create a cronget job."),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('cronget_form_job'),
    'access arguments' => array('create cronget jobs'),
    'file' => 'cronget.admin.inc',
    'type' => MENU_LOCAL_TASK,
  );
  return $items;
}

/**
 * Implementation of hook_hook_info()

function cronget_hook_info() {
  $triggers = array(
    'cronget' => array(
      'cronget' => array(
        'cronget_preprocess' => array(
          'runs when' => t('Before cronget data is saved.')
        ),
        'cronget_executed' => array(
          'runs when' => t('Cronget is executed.')
        )
      )
    )
  );
  return $triggers;
}
**/

/**
 * Implementation of hook_perm()
 **/
function cronget_perm() {
  return array(
    'administer cronget',
    'create cronget jobs',
    'edit own cronget jobs',
    'access cronget');
}

/**
 * Implementation of hook_access
 */
function cronget_access($op, $node) {
  global $user;
  //TODO: Setup
}

return array(
  'cronget' => array(
    'name' => t('Cronget'),
    'module' => 'cronget',
    'description' => t('Nodes created by the cronget module'),
    'has_title' => TRUE,
    'title_label' => t('Title'), //Uses cronget job title
    'has_body' => FALSE //We store body in {cronget_data}
  )
);